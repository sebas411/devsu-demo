name: Devsu demo CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  DJANGO_SECRET_KEY: gh-actions-example-key

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run migrations
        run: |
          source venv/bin/activate
          python manage.py migrate
      
      - name: Upload SQLite database as artifact
        uses: actions/upload-artifact@v4
        with:
          name: sqlite-db
          path: db.sqlite3
          retention-days: 1


  unit_tests:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Download SQLite database artifact
        uses: actions/download-artifact@v4
        with:
          name: sqlite-db

      - name: Run unit tests
        run: |
          source venv/bin/activate
          python manage.py test

  static_analysis:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8

      - name: Run static code analysis
        run: |
          source venv/bin/activate
          flake8 --extend-exclude='venv,./*/migrations/*' .

  code_coverage:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install coverage

      - name: Download SQLite database artifact
        uses: actions/download-artifact@v4
        with:
          name: sqlite-db

      - name: Run coverage tests
        run: |
          source venv/bin/activate
          coverage run --source='.' manage.py test
          coverage report -m --fail-under 85

  docker_build_push:
    needs: [unit_tests, static_analysis, code_coverage]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and push Docker image
        run: |
          docker build -t sebas411/devsu-demo:latest .
          docker tag sebas411/devsu-demo:latest sebas411/devsu-demo:${{ github.sha }}
          docker push sebas411/devsu-demo:latest
          docker push sebas411/devsu-demo:${{ github.sha }}

  vulnerability_scan:
    needs: docker_build_push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Trivy
        run: |
          sudo apt-get install -y wget apt-transport-https gnupg lsb-release
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install -y trivy

      - name: Run vulnerability scan
        run: |
          trivy image --exit-code=1 --severity=CRITICAL,HIGH sebas411/devsu-demo:latest

  deploy:
    needs: vulnerability_scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Update kubeconfig for AWS EKS
        run: |
          aws eks update-kubeconfig --name eks-cluster --region us-west-2

      - name: Deploy to Kubernetes
        run: |
          kubectl set image deployment/devsu-app devsu-app=sebas411/devsu-demo:${{ github.sha }} --kubeconfig=kubeconfig
          kubectl rollout status deployment/myapp --kubeconfig=kubeconfig
